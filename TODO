==========  particlEd :: ToDo list  ==========

(-) add notices to modified TMW files;
    study terms of GPL (do I have to change headers "TMW project" or can I let
    them as they are?)

(-) study TMW coding standard and modify particlEd's code to accomplish it

(-) enable input

(-) main.cpp: replace literal "50" with constant

(-) find how to load fonts - either solve the physfs issue or discard physfs

(-) controller panel:
    - one button is always 'pressed' and looks differently
    - how will it notify main program about the desired state?
    - time of effect's existence

(-) tree-view of effect's internals

(-) options:
    - show position of the effect using some symbol (e.g. small red X)
    - show current particle count
    - show fps
    - set delay per frame
    - reload effect whenever it is changed on the disk?
    - verbosity (particlEd is too verbose by default, which is bad)

(-) selecting a file:
    - particled can be started without an effect file given
    - button 'Open' -> dialog to open file

(-) window should be resizable (sometimes I find that effect needs much more 
    space - I should be able to add space without restarting)
    (I don't know if this is possible together with Guichan GUI...)

(-) TMW client doesn't have very useful error messages for malformed
    particle effects;
    write 'particle effect lint' - Ruby script which loads particle effect,
    checks if it makes sense and provides useful hints.
    Or rewrite parts of TMW processing XML...
